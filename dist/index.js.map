{"version":3,"file":"index.js","sources":["../src/toBool.js","../src/env.js","../src/toRoman.js","../src/toLetter.js"],"sourcesContent":["import { isString } from 'lodash'\r\n\r\n/**\r\n * @render utils\r\n * @name toBool\r\n * @param val\r\n * @returns {boolean}\r\n * @description Convert value to a boolean.\r\n * @example\r\n * toBool(true); // -> true\r\n * toBool(null); // -> false\r\n * toBool(1); // -> true\r\n * toBool(0); // -> false\r\n * toBool('0'); // -> false\r\n * toBool('1'); // -> true\r\n * toBool('false'); // -> false\r\n */\r\n\r\nfunction toBool(val) {\r\n\tif (isString(val)) {\r\n\t\tval = val.toLowerCase()\r\n\t\treturn val !== '0' && val !== '' && val !== 'false'\r\n\t}\r\n\r\n\treturn !!val\r\n}\r\n\r\nexport default toBool","import dotenv from 'dotenv'\r\nimport { toLower, map, get } from 'lodash'\r\n\r\n/**\r\n * @static\r\n * @description Gets the value of an environment variable.\r\n * @param {string} key\r\n * @param {mixed} _default\r\n * @return {mixed}\r\n */\r\n\r\nfunction env(key, _default = null) {\r\n\tconst result = dotenv.config()\r\n\r\n\tif (result.error) {\r\n\t\tthrow result.error\r\n\t}\r\n\r\n\treturn get(map(result.parsed).map(v => {\r\n\t\tswitch (toLower(v)) {\r\n\t\t\tcase 'true':\r\n\t\t\tcase '(true)':\r\n\t\t\t\treturn true\r\n\t\t\tcase 'false':\r\n\t\t\tcase '(false)':\r\n\t\t\t\treturn false\r\n\t\t\tcase 'empty':\r\n\t\t\tcase '(empty)':\r\n\t\t\t\treturn ''\r\n\t\t\tcase 'null':\r\n\t\t\tcase '(null)':\r\n\t\t\t\treturn\r\n\t\t}\r\n\r\n\t\treturn v\r\n\t}), key, _default)\r\n}\r\n\r\nexport default env","/**\r\n * @render utils\r\n * @name toRoman\r\n * @param num\r\n * @returns {string}\r\n * @description Convert number to roman.\r\n * https://forum.freecodecamp.org/t/freecodecamp-challenge-guide-roman-numeral-converter/16044\r\n * @example\r\n * toRoman(1); // -> I\r\n * toRoman(2); // -> II\r\n */\r\nimport { lowerCase } from 'lodash'\r\n\r\nfunction toRoman(num, isLowercase) {\r\n\tif (typeof num !== 'number') return false\r\n\r\n\tlet digits = String(+num).split(''),\r\n\t\tkey = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM',\r\n\t\t\t'', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC',\r\n\t\t\t'', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'],\r\n\t\troman_num = '',\r\n\t\ti = 3\r\n\twhile (i--)\r\n\t\troman_num = (key[+digits.pop() + (i * 10)] || '') + roman_num\r\n\r\n\tlet romanStr = Array(+digits.join('') + 1).join('M') + roman_num\r\n\r\n\treturn isLowercase ? lowerCase(romanStr) : romanStr\r\n}\r\n\r\nexport default toRoman","/**\r\n * @render utils\r\n * @name toLetter\r\n * @param int\r\n * @param uppercase\r\n * @returns {string}\r\n * @example\r\n * toLetter(1); // -> a\r\n * toLetter(1, true); // -> A\r\n */\r\n\r\nimport { lowerCase } from 'lodash'\r\n\r\nfunction toLetter(int, isLowercase = false) {\r\n\tlet letter = String.fromCharCode((int - 1) + 65)\r\n\treturn isLowercase ? lowerCase(letter) : letter\r\n}\r\n\r\nexport default toLetter"],"names":["toBool","val","isString","toLowerCase","env","key","_default","result","dotenv","config","error","get","map","parsed","v","toLower","toRoman","num","isLowercase","digits","String","split","roman_num","i","pop","romanStr","Array","join","lowerCase","toLetter","int","letter","fromCharCode"],"mappings":"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"}